<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    
    <!--MainWindow-->
    <Style TargetType="{x:Type Border}" x:Key="MainWindowBorderTheme">
        <Setter Property="Background" Value="#FF3A2D54"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="LeftStackPanelBorder">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF1D4772"/>
                    <GradientStop Color="#FF242A79" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="MainStyleMenuText">
        <Setter Property="FontFamily" Value="Fonts/Roboto-Light.ttf #Roboto"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style TargetType="ToolTip" x:Key="ToolTipStyle">
        <Setter Property="Placement" Value="Right"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Background" Value="#4A5668"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Fonts/Roboto-Light.ttf #Roboto"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="PlacementRectangle" Value="60,0,0,0"/>
        <Setter Property="HorizontalOffset" Value="15"/>
        <Setter Property="VerticalOffset" Value="6"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>
    <!--MainWindow-->
    
    <!--MainPage-->

    <Style TargetType="{x:Type Border}" x:Key="MainPageCenterBorder">
        <Setter Property="Background" Value="#FF2054A6"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="800"/>
        <Setter Property="Height" Value="550"/>
    </Style>

    <!--MainPage-->

    <Style TargetType="{x:Type Button}" x:Key="ModernButtonBlue">
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Background" Value="#6C5EF1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="Auto" Height="Auto" CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFAC9FF1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="TransparentButton4848Usual">
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Width" Value="48"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFAC9FF1"/>
            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="Background" Value="#6C5EF1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="TransparentButton4848ReadFile">
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Background" Value="#FF4D96DF"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Width" Value="48"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF2A95D1"/>
            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="Background" Value="#FF3A6DBD"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="TransparentButton4848MenuHub">
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Width" Value="48"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF2A95D1"/>
            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="Background" Value="#FF3A6DBD"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonClickDarkTheme">
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Background" Value="#123"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF342845"/>
            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="Background" Value="#FF222B68"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonClickLightTheme">
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Background" Value="#F5F5F5"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFAED1AC"/>
            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="Background" Value="#FF77B87F"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--WorkersPage-->

    <Style TargetType="{x:Type Grid}" x:Key="WorkersOffGridBackground">
        <Setter Property="Background" Value="#FF3A2D54"/>
    </Style>
    
    <Style TargetType="{x:Type Border}" x:Key="BorderListWorkers">
        <Setter Property="Background" Value="White"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="BorderThickness" Value="8"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="TransparentToggleButtonButtonWorkersRightBorder">
        <Setter Property="Background" Value="#FF954FBE"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="Height" Value="48"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="WorkersRightBorder">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF1B68B5"/>
                    <GradientStop Color="#123" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="BorderThickness" Value="8"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="SearchWorkerTextBox">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="220"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="FontSize" Value="18"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="WorkerValueTextBox">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="FontSize" Value="18"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="LabelUsStyleVHCenter">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type Line}" x:Key="LineinBorderInfoWorkers">
        <Setter Property="Stroke" Value="Black"/>
        <Setter Property="X1" Value="20"/>
        <Setter Property="X2" Value="260"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="BorderOpenSearch">
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Background" Value="#FF13508D"/>
    </Style>
    <!--WorkersPage-->

    <!--DataPage-->
    <Style TargetType="{x:Type Border}" x:Key="DataPageMainBorderStyle">
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Background" Value="#FF5B40A6"/>
        <Setter Property="Width" Value="950"/>
        <Setter Property="Height" Value="600"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="TransparentBorderBlueColorButtonIcon4848Style">
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Background" Value="#FF4D96DF"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
    </Style>
    <!--DataPage-->

    <!--SettingsPage-->
    <Style TargetType="{x:Type Border}" x:Key="SettingsPageMainBorderTheme">
        <Setter Property="Background" Value="#FF2054A6"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="800"/>
        <Setter Property="Height" Value="550"/>
    </Style>
    <!--SettingsPage-->

    <!--InfoPage-->
    <Style TargetType="{x:Type Border}" x:Key="InfoPageBorderTheme">
        <Setter Property="Background" Value="DarkSlateBlue"/>
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="760"/>
        <Setter Property="Height" Value="340"/>
    </Style>
    <!--InfoPage-->

    <Style TargetType="{x:Type Border}" x:Key="Border1Corner11Button">
        <Setter Property="Background" Value="LightBlue"/>
        <Setter Property="CornerRadius" Value="10"/>
    </Style>
    
    <Style TargetType="{x:Type Border}" x:Key="Border2Corner11Button">
        <Setter Property="Background" Value="LightBlue"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonInCornerRadius11Border">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="20"/>    
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="#FF751DF3"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF3A6DBD"/>
            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="Background" Value="#FF3CC6D7"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type Label}" x:Key="LabelUsStyle">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockUsStyle">
        <Setter Property="Foreground" Value="White"/>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockUsStyleVHCenter">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="TransparentStyleButton">
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <ImageBrush x:Key="ToggleButtonMouseOver"
                ImageSource="/Resources/Icons/MainWindow/MenuButton.png"/>

    <ImageBrush x:Key="ToggleButtonAround"
                ImageSource="/Resources/Icons/MainWindow/MenuButton1.png"/>

    <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleButtonMainWindowStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ToggleButtonMouseOver}"/>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ToggleButtonMouseOver}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ToggleButtonMouseOver}"/>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ToggleButtonMouseOver}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleButtonWorkersRightStackPanel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ToggleButtonMouseOver}"/>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ToggleButtonMouseOver}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ToggleButtonMouseOver}"/>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ToggleButtonMouseOver}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>